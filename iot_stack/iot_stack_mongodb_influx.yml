# Use root/example as user/password credentials
version: '3.1'
services:


# mongodb
  mongo:
    image: mongo:4.2
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

# web interface for mongo db. access it using http://localhost:8081
  mongo-express:
    image: mongo-express:0.49
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  #admin/password ou admin/admin
  grafana:
    image: grafana/grafana:6.3.3
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    links:
      - "influxdb:influxdatabase"
    volumes:
      - "grafana-volume"
    user: "472"

  mosquitto:
    image: eclipse-mosquitto:1.6.4
    container_name: mosquitto
    restart: always
    # volume: mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883
      - 9001:9001

  node-red:
    image: nodered/node-red:1.0.2
    restart: always
    ports: 
      - 1880:1880
    links:
      - "mosquitto:mosquittosrc"
      - "influxdb:influx"
    volumes:
      - "~/Docker/node-red-data:/data"

  influxdb:
    image: influxdb:1.5.4
    container_name: influxdb
    restart: always
    environment:
     - INFLUXDB_USERNAME=influxdb
     - INFLUXDB_PASSWORD=password
     - INFLUXDB_INIT_PWD=password
     - PRE_CREATE_DB=iot
     - INFLUXDB_ADMIN_ENABLED=true
     - INFLUXDB_DB=iot
    ports:
     - 8083:8083
     - 8086:8086
    volumes:
     - "influxdb-volume"

  postgresql:
    image: postgres:12.0
    container_name: postgres
    restart: always
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: meupassword
        POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
    - "postgres-volume"
  
#Mapping of volumes to the internal docker volumes
volumes:
    grafana-volume:
        external: false
    influxdb-volume:
        external: false
    postgres-volume:
        external: false
    

# how to start stack
# docker-compose -f iot_stack.yml up -d

# how to stop stack
# docker-compose -f iot_stack.yml down